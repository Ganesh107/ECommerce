trigger: 
- none

stages:
- stage: build
  pool: 
    vmImage: 'windows-latest'
  jobs:
  - job: build_job
    steps:
      # Restore dependencies
      - task: DotNetCoreCLI@2
        inputs:
          command: 'restore'
          projects: |
            app-backend/ECommerce.Service/ECommerce.Product.Service/ECommerce.Product.Service.csproj 
            app-backend/ECommerce.Service/ECommerce.Auth.Service/ECommerce.Auth.Service.csproj
     
      # Build projects
      - task: DotNetCoreCLI@2
        inputs:
          command: 'build'
          projects: |
            app-backend/ECommerce.Service/ECommerce.Product.Service/ECommerce.Product.Service.csproj 
            app-backend/ECommerce.Service/ECommerce.Auth.Service/ECommerce.Auth.Service.csproj

      # Build database projects
      - task: VSBuild@1
        inputs:
          solution: app-backend/ECommerce.Database/ECommerce.Database.sqlproj
          platform: 'Any CPU' 
          configuration: 'Release'

       # Copy necessary files to the artifact staging directory
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/app-backend/ECommerce.Database/output' 
          TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - job: publish
    dependsOn: build_job
    steps:
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: database_artifact
      
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          ArtifactName: database_artifact
          targetPath: '$(Pipeline.Workspace)'