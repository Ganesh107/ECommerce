trigger: 
- none

variables:
  buildConfiguration: 'Release'
  backend: 'ECommerce_Backend'
  artifactName: 'backend'
  publishFolder: 'publish'

stages:
- stage: build
  pool: 
    vmImage: 'windows-latest'
  jobs:
    # Build and publish backend projects
  - job: build_job
    steps:
      - task: UseDotNet@2
        displayName: 'Install .NET SDK'
        inputs:
          packageType: 'sdk'
          version: '8.x'

      # Restore dependencies
      - task: DotNetCoreCLI@2
        displayName: Restore dependencies
        inputs:
          command: 'restore'
          projects: '**/*.csproj'
     
      # Build projects
      - task: DotNetCoreCLI@2
        displayName: Build Backend Projetcs
        inputs:
          command: 'build'
          configuration: $(buildConfiguration)
          projects: '**/*.csproj'
      
      # Publish projects
      - task: DotNetCoreCLI@2
        displayName: Publish Backend Projects
        inputs:
          command: 'publish' 
          arguments: '--configuration $(buildConfiguration) --output $(build.ArtifactStagingDirectory)/$(publishFolder)'
          projects: '**/*.csproj'
      
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Build Artifacts'
        inputs:
          pathToPublish: '$(build.ArtifactStagingDirectory)/$(publishFolder)'
          artifactName: '$(artifactName)'
    
    # Build and publish database projects
  - job: publish_Db
    steps:
    - task: VSBuild@1
      displayName: build db projects
      inputs:
        solution: '**/*.sqlproj'
        platform: 'Any CPU' 
        configuration: 'Release'

    # Copy necessary files to the artifact staging directory
    - task: CopyFiles@2
      displayName: Copy dacpac files
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/app-backend/ECommerce.Database/ECommerce.Product/bin/Output' 
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    # Publish the build artifact
    - task: PublishBuildArtifacts@1
      displayName: Publish db artifacts
      inputs:
        PathToPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'database_artifact'

    - task: DownloadPipelineArtifact@2
      displayName: Download db artifacts
      inputs:
        buildType: 'current'
        artifactName: 'database_artifact'
        targetPath: '$(Pipeline.Workspace)/dacpac'

- stage: Deploy
  dependsOn: build
  displayName: deploy backend and db
  jobs:
  - deployment: DeployDacpac
    environment: 
      name: EcommerceDev
      resourceName: EcomVM
      resourceType: VirtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
          - powershell: |
              $dacpacPath = '$(Pipeline.Workspace)/database_artifact/ECommerce.Product.dacpac'
              $sqlPackagePath = "C:\Program Files\Microsoft SQL Server\160\DAC\bin\SqlPackage.exe"
              $serverName = '$(server)'
              $database = 'ECommerce_Product'
              $username = '$(userName)'
              $password = '$(password)'

              & "$sqlPackagePath" /Action:Publish `
                  /SourceFile:$dacpacPath `
                  /TargetServerName:$serverName `
                  /TargetDatabaseName:$database `
                  /TargetUser:$username `
                  /TargetPassword:$password `
                  /TargetTrustServerCertificate:True

  - deployment: Deploy_backend
    dependsOn: DeployDacpac
    environment: 
      name: EcommerceDev
      resourceName: EcomVM
      resourceType: VirtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
            # - download: current
            #   artifact: $(artifactName)
            # - task: CopyFiles@2
            #   displayName: 'Copy Files To VM'
            #   inputs:
            #     SourceFolder: $(Pipeline.Workspace)/$(artifactName)
            #     Contents: '**/*'
            #     TargetFolder: '\\\\<EComVM>\\c$\\inetpub\\wwwroot\\$(backend)'
            #     CleanTargetFolder: true
            #     OverWrite: true
            - task: WindowsMachineFileCopy@2
              displayName: 'Deploy To IIS'
              inputs:
                SourcePath: $(Pipeline.Workspace)/$(artifactName)
                TargetPath: 'C:\\inetpub\\wwwroot\\$(backend)'
                CleanTargetBeforeCopy: true
                MachineNames: 'EComVM'
                AdminUserName: $(vmUser)
                AdminPassword: $(vmPassword)
