trigger: 
- none
variables:
  buildConfiguration: 'Release'
  backend: 'ECommerceBackend'
  vmName: 'dev'
  artifactName: 'backend'
  publishFolder: 'publish'

stages:
- stage: build
  pool: 
    vmImage: 'windows-latest'
  jobs:
    # Build and publish backend projects
  - job: build_job
    steps:
      - task: UseDotNet@2
        displayName: 'Install .NET SDK'
        inputs:
          packageType: 'sdk'
          version: '8.x'

      # Restore dependencies
      - task: DotNetCoreCLI@2
        inputs:
          command: 'restore'
          projects: '**/*.csproj'
     
      # Build projects
      - task: DotNetCoreCLI@2
        inputs:
          command: 'build'
          configuration: $(buildConfiguration)
          projects: '**/*.csproj'
      
      # Publish projects
      - task: DotNetCoreCLI@2
        inputs:
          command: 'publish' 
          arguments: '--configuration $(buildConfiguration) --output $(build.ArtifactStagingDirectory)/$(publishFolder)'
          projects: '**/*.csproj'
      
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Build Artifacts'
        inputs:
          pathToPublish: '$(build.ArtifactStagingDirectory)/$(publishFolder)'
          artifactName: '$(artifactName)'
    
#     # Build and publish database projects
#   - job: publish
#     steps:
#     - task: VSBuild@1
#       inputs:
#         solution: app-backend/ECommerce.Database/ECommerce.Product/ECommerce.Product.sqlproj
#         platform: 'Any CPU' 
#         configuration: 'Release'

#     # Copy necessary files to the artifact staging directory
#     - task: CopyFiles@2
#       inputs:
#         SourceFolder: '$(Build.SourcesDirectory)/app-backend/ECommerce.Database/ECommerce.Product/bin/Output' 
#         TargetFolder: '$(Build.ArtifactStagingDirectory)'

#     # Publish the build artifact
#     - task: PublishBuildArtifacts@1
#       inputs:
#         PathToPublish: '$(Build.ArtifactStagingDirectory)'  
#         ArtifactName: 'database_artifact'

#     - task: DownloadPipelineArtifact@2
#       inputs:
#         buildType: 'current'
#         artifactName: 'database_artifact'
#         targetPath: '$(Pipeline.Workspace)/dacpac'

# - stage: Deploy
#   dependsOn: build
#   jobs:
#   - deployment: DeployDacpac
#     environment: 
#       name: dev
#       resourceName: ECommerceVM
#       resourceType: VirtualMachine
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - powershell: |
#               $dacpacPath = '$(Pipeline.Workspace)/database_artifact/ECommerce.Database.dacpac'
#               $sqlPackagePath = "C:\Program Files\Microsoft SQL Server\160\DAC\bin\SqlPackage.exe"
#               $serverName = '$(server)'
#               $database = 'ECommerce_Product'
#               $username = '$(userName)'
#               $password = '$(password)'

#               & "$sqlPackagePath" /Action:Publish `
#                   /SourceFile:$dacpacPath `
#                   /TargetServerName:$serverName `
#                   /TargetDatabaseName:$database `
#                   /TargetUser:$username `
#                   /TargetPassword:$password `
#                   /TargetTrustServerCertificate:True